Data_Rekam_Medis
{I.S. : User memasukkan data pasien}
{F.S. : Menampilkan data pasien yang sudah terurut}

Kamus : //Kamus Global
const
  Maks_Psn     = 50
  NamaPengguna = 'admin'
  KataSandi    = 'rootadmin'
  filepsn      = 'D:\[Unikom]\TugasBesar\Alpro\filepasien.dat'

type
    Dt_Psn = record
      Kode,Nama,JK,Alamat,Agama,Umur,Pekerjaan    : string //JK : Jenis Kelamin
      Pemeriksaan,Diagnosis,Pengobatan,TglBerobat : string
      N : integer
    EndRecord
    Pasien = array[1..Maks_Psn] of Dt_Psn

 Psn           : Pasien
 FilePasien    : File of Pasien
 Menu          : integer
 NP,KS         : string  //NP : Nama pengguna, KS : Kata sandi

function Login(NP,KS : string) -> boolean
{I.S. : nama pengguna (NP) dan kata sandi (KS) sudah terdefinisi}
{F.S. : menghasilkan fungsi login}

Kamus :
    i : integer

Algoritma :
  i <- 1
  while((NP <> NamaPengguna) or (KS <> KataSandi)) and (i <> 3) do
    Output('Salah Login!') 
    Input(NP) gotoxy(39,10) Input(KS)
    i <- i + 1
  if(i <= 3) and (NP = NamaPengguna) and (KS = KataSandi)
  then 
    Login <- true
  else
    Login <- false
  endif
endfunction

procedure Isi_Data(Output Psn:Pasien
{I.S. : user memasukkan banyaknya data (N) dan data pasien}
{F.S. : menghasilkan banyaknya data (N) dan pasien}
Kamus :
 i : integer
Algoritma :
    assign(FilePasien,filepsn)
    rewrite(FilePasien)
    Output('Banyaknya Data : ') 
    Input(Psn[1].N)
    for i <- 1 to Psn[1].N do
      clrscr
      Output('================================================================================')
      Output('|                          -= KLINIK KATAMSO =-                                |')
      Output('================================================================================')
      Output('-----------------------------DATA PASIEN Ke-',i,'-----------------------------------')
      Output('Kode Pasien                : ') 
      Input(Psn[i].Kode)
      Output('Nama Pasien                : ') 
      Input(Psn[i].Nama)
      Output('Alamat                     : ') 
      Input(Psn[i].Alamat)
      Output('Pekerjaan                  : ') 
      Input(Psn[i].Pekerjaan)
      Output('Jenis Kelamin              : ') 
      Input(Psn[i].JK)
      Output('Umur Pasien                : ') 
      Input(Psn[i].Umur)    
      Output('Agama Pasien               : ') 
      Input(Psn[i].Agama)
      Output('======================================================================')
      Output('|                      -= DATA REKAM MEDIS =-                        |')
      Output('======================================================================')
      Output('| TGL BEROBAT |    PEMERIKSAAN    |    DIAGNOSIS    |   PENGOBATAN   |')
      Output('======================================================================')
      Output('|             |                   |                 |                |')
      Output('======================================================================')
      Input(Psn[i].TglBerobat)
      Input(Psn[i].Pemeriksaan)
      Input(Psn[i].Diagnosis)
      Input(Psn[i].Pengobatan)
      Output('--------------------------------------------------------------------------------')
    Endfor
   Output(FilePasien,Psn)
   close(FilePasien)
end// Endprocedure

procedure Urut_Kode(var Psn:Pasien)
{I.S. : banyaknya data (N) dan data pasien sudah terdefinisi}
{F.S. : menghasilkan data pasien yang sudah terurut berdasarkan kode}

Kamus :
 i,j,min : integer
 Temp    : Dt_Psn

Algoritma :
  assign(FilePasien,filepsn)
  reset (FilePasien)
  read  (FilePasien,Psn)
  for i <- 1 to (Psn[1].N-1) do
    min <- i
    for j <- (i+1) to Psn[1].N do
      if(Psn[j].Kode < Psn[min].Kode)
        then
          min <- j
      endif
    Endfor

        // Menukarkan Data
        Temp     <- Psn[i]
        Psn[i]   <- Psn[min]
        Psn[min] <- Temp
  Endfor
  close (FilePasien)
Endprocedure

procedure Tampil_Data(Psn:Pasien)
{I.S. : banyaknya data (N) dan data pasien sudah terdefinisi}
{F.S. : menampilkan banyaknya data (N) dan pasien}

Kamus :
 i,baris : integer

Algoritma :
  clrscr
  Output('|=============================================================================|')
  Output('|                       -= DATA PASIEN REKAM MEDIS=-                          |')
  Output('|=============================================================================|')
  baris <- 5
  for i <- 1 to Psn[1].N do
    Output('-----------------------------DATA PASIEN Ke-',i,'-------------------------------')
    Output('Kode Pasien   : ',Psn[i].Kode)
    Output('Nama Pasien   : ',Psn[i].Nama)
    Output('Alamat        : ',Psn[i].Alamat)
    Output('Jenis Kelamin : ',Psn[i].JK)
    Output('Umur          : ',Psn[i].Umur)
    Output('Agama         : ',Psn[i].Agama)
    Output('========================================================================')
    Output('|                         -= DATA REKAM MEDIS =-                       |')
    Output('========================================================================')
    Output('| TGL BEROBAT |   PEMERIKSAAN   |       DIAGNOSIS     |   PENGOBATAN   |')
    Output('========================================================================')
    Output('|             |                 |                     |                |')
    Output('========================================================================')
    Output(Psn[i].TglBerobat)
    Output(Psn[i].Pemeriksaan)
    Output(Psn[i].Diagnosis)
    Output(Psn[i].Pengobatan)
    baris <- baris + 13
  Endfor
    Output('==============================================================================')
endprocedure


procedure CariKode(Psn:Pasien)
{I.S. : Banyaknya data(N) dan data pasien sudah terdefinisi}
{F.S. : mencari data buku berdasarkan kode pasien}

Kamus :
   i : integer
   KodeCari : string
   Ketemu  : boolean

Algoritma :
     Output('               <> DATA PASIEN YANG DICARI BERDASARKAN KODE <>                  ')
     Output('Masukan Kode yang dicari : ') Input(KodeCari)
     i <- 1
     Ketemu <- false
     while (Not Ketemu) and (i <= Psn[1].N) do
       if (Psn[i].Kode = KodeCari)
        then
         Ketemu <- true
        else
         i <- i + 1
       endif
       if (Ketemu)
        then
            Output('               <> DATA PASIEN YANG DICARI BERDASARKAN KODE <>                  ')
            Output('Kode Yang Dicari : ',KodeCari)
            Output('Kode Pasien   : ',Psn[i].Kode)
            Output('Nama Pasien   : ',Psn[i].Nama)
            Output('Alamat        : ',Psn[i].Alamat)
            Output('Jenis Kelamin : ',Psn[i].JK)
            Output('Umur Pasien   : ',Psn[i].Umur)
            Output('Agama Pasien  : ',Psn[i].Agama)              
            Output('========================================================================')
            Output('|                         -= DATA REKAM MEDIS =-                       |')
            Output('========================================================================')
            Output('| TGL BEROBAT |   PEMERIKSAAN   |   DIAGNOSIS         |   PENGOBATAN   |')
            Output('========================================================================')
            Output('|             |                 |                     |                |')
            Output('========================================================================')
            Output(Psn[i].TglBerobat)
            Output(Psn[i].Pemeriksaan)
            Output(Psn[i].Diagnosis)
            Output(Psn[i].Pengobatan)
          else
              Output('Kode ',KodeCari,' tidak ditemukan !')
       endif
endprocedure